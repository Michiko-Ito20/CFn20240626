AWSTemplateFormatVersion: "2010-09-09"

Description: "Ansible_CFn,Create-S3Bucket"

Resources: 
  # S3バケットの作成
  AnsibleS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "ansible-bucket-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ansible-bucket"
        - Key: Purpose
          Value: "Ansible SSH Configuration"

  # S3バケットポリシー
  AnsibleS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AnsibleS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt S3AccessRole.Arn
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:ListBucket'
            Resource: 
              - !GetAtt AnsibleS3Bucket.Arn
              - !Sub "${AnsibleS3Bucket.Arn}/*"

  S3AccessRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${AWS::StackName}-CircleCI-S3-Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
          
  S3AccessPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-S3-Ansible-Access"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "s3:ListAllMyBuckets"
              - "s3:GetBucketLocation"
            Resource: "*"
          - Effect: Allow
            Action: "s3:*"
            Resource:
              - !GetAtt AnsibleS3Bucket.Arn
              - !Sub "${AnsibleS3Bucket.Arn}/*"
      Roles:
        - !Ref S3AccessRole

  # EC2インスタンスプロファイル
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref S3AccessRole
      InstanceProfileName: !Sub "${AWS::StackName}-EC2-S3-Profile"

Outputs:
  RoleArn:
    Description: "IAMロールのARN"
    Value: !GetAtt S3AccessRole.Arn
  InstanceProfile:
    Description: "インスタンスプロファイル名"
    Value: !Ref EC2InstanceProfile
  BucketName:
    Description: "作成したS3バケット名"
    Value: !Ref AnsibleS3Bucket
  BucketARN:
    Description: "S3バケットのARN"
    Value: !GetAtt AnsibleS3Bucket.Arn

