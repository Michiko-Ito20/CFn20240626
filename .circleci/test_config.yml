#!/bin/bash

# Test 1: Ansible Connection Test
echo "Running Test 1: Ansible Connection Test"
ansible ec2 -i myrole/tests/inventory -m ping > test_ansible_ping_result.log 2>&1
if grep -q "SUCCESS" test_ansible_ping_result.log; then
  echo "Test 1 Passed: Ansible Connection Successful"
else
  echo "Test 1 Failed: Ansible Connection Failed"
  cat test_ansible_ping_result.log
  exit 1
fi

# Test 2: CloudFormation Stack Creation
echo "Running Test 2: CloudFormation Stack Creation"
MOCK_STACK_NAME="TestStack"
aws cloudformation deploy \
  --template-file test_template.yml \
  --stack-name $MOCK_STACK_NAME \
  --region ap-northeast-1 \
  --capabilities CAPABILITY_NAMED_IAM > test_cfn_creation.log 2>&1
if [ $? -eq 0 ]; then
  echo "Test 2 Passed: CloudFormation Stack Created Successfully"
else
  echo "Test 2 Failed: CloudFormation Stack Creation Failed"
  cat test_cfn_creation.log
  exit 1
fi

# Test 3: Inventory File Generation
echo "Running Test 3: Inventory File Generation"
MOCK_INSTANCE_NAME="TestInstance"
MOCK_INVENTORY_FILE="test_inventory"
MOCK_INSTANCE_ID="i-1234567890abcdef0"
echo "[ec2]" > $MOCK_INVENTORY_FILE
echo "${MOCK_INSTANCE_ID} ansible_connection=amazon.aws.ssm" >> $MOCK_INVENTORY_FILE
if grep -q "$MOCK_INSTANCE_ID" $MOCK_INVENTORY_FILE; then
  echo "Test 3 Passed: Inventory File Generated Successfully"
else
  echo "Test 3 Failed: Inventory File Generation Failed"
  cat $MOCK_INVENTORY_FILE
  exit 1
fi

echo "All Tests Passed Successfully"
# Add a step to verify and debug the amazon.aws collection installation
jobs:
  setup-environment:
    steps:
      - run:
          name: Verify amazon.aws Collection Installation
          command: |
            ansible-galaxy collection list | grep amazon.aws || {
              echo "amazon.aws collection is not installed. Installing now..."
              ansible-galaxy collection install amazon.aws --force
            }
            ansible --version
            ansible-galaxy collection list | grep amazon.aws
      - run:
          name: Check ANSIBLE_COLLECTIONS_PATHS
          command: |
            echo "ANSIBLE_COLLECTIONS_PATHS: $ANSIBLE_COLLECTIONS_PATHS"
            if [ -z "$ANSIBLE_COLLECTIONS_PATHS" ]; then
              echo "Setting ANSIBLE_COLLECTIONS_PATHS to default..."
              export ANSIBLE_COLLECTIONS_PATHS=~/.ansible/collections:/usr/share/ansible/collections
            fi
            echo "Updated ANSIBLE_COLLECTIONS_PATHS: $ANSIBLE_COLLECTIONS_PATHS"
      - run:
          name: Test Ansible Connection via SSM
          command: |
            ansible ec2 -i myrole/tests/inventory -m ping > ansible_ping_result.log 2>&1 || {
              echo "Error: Ansible command failed. Check ansible_ping_result.log for details."
              cat ansible_ping_result.log
              exit 1
            }
            if ! grep -q "SUCCESS" ansible_ping_result.log; then
              echo "Error: Ansible connection test failed. Check ansible_ping_result.log for details."
              cat ansible_ping_result.log
              exit 1
            fi
commands:
  install-dependencies:
    description: "Install required dependencies"
    steps:
      - run:
          name: Install dependencies
          command: |
            #!/bin/bash

            # Test 4: Verify AWS CLI Installation and Configuration
            echo "Running Test 4: Verify AWS CLI Installation and Configuration"
            if ! command -v aws &> /dev/null; then
              echo "Test 4 Failed: AWS CLI is not installed"
              exit 1
            fi
            aws sts get-caller-identity > test_aws_cli.log 2>&1
            if [ $? -eq 0 ]; then
              echo "Test 4 Passed: AWS CLI is installed and configured correctly"
            else
              echo "Test 4 Failed: AWS CLI configuration issue"
              cat test_aws_cli.log
              exit 1
            fi

            # Test 5: Verify amazon.aws Ansible Collection Installation
            echo "Running Test 5: Verify amazon.aws Ansible Collection Installation"
            ansible-galaxy collection list | grep amazon.aws > test_ansible_collection.log 2>&1
            if [ $? -eq 0 ]; then
              echo "Test 5 Passed: amazon.aws Ansible Collection is installed"
            else
              echo "Test 5 Failed: amazon.aws Ansible Collection is not installed"
              cat test_ansible_collection.log
              exit 1
            fi

            # Test 6: Verify SSM Connection to EC2 Instance Using Ansible
            echo "Running Test 6: Verify SSM Connection to EC2 Instance Using Ansible"
            INSTANCE_NAME="AnsibleStackEC2-ALB-SG-ec2-instance"
            INVENTORY_FILE="myrole/tests/inventory"
            INSTANCE_ID=$(aws ec2 describe-instances \
              --region ap-northeast-1 \
              --filters "Name=tag:Name,Values=${INSTANCE_NAME}" \
              --query "Reservations[*].Instances[*].InstanceId" \
              --output text)
            if [ -z "$INSTANCE_ID" ]; then
              echo "Test 6 Failed: EC2 Instance ID could not be retrieved"
              exit 1
            fi
            echo "[ec2]" > $INVENTORY_FILE
            echo "${INSTANCE_ID} ansible_connection=amazon.aws.ssm" >> $INVENTORY_FILE
            ansible ec2 -i $INVENTORY_FILE -m ping > test_ansible_ssm.log 2>&1
            if grep -q "SUCCESS" test_ansible_ssm.log; then
              echo "Test 6 Passed: SSM Connection to EC2 Instance Successful"
            else
              echo "Test 6 Failed: SSM Connection to EC2 Instance Failed"
              cat test_ansible_ssm.log
              exit 1
            fi

            # Test 7: Verify EC2 Instance Tags
            echo "Running Test 7: Verify EC2 Instance Tags"
            INSTANCE_TAGS=$(aws ec2 describe-tags \
              --region ap-northeast-1 \
              --filters "Name=resource-id,Values=${INSTANCE_ID}" \
              --query "Tags[*].[Key,Value]" \
              --output text)
            if [ -z "$INSTANCE_TAGS" ]; then
              echo "Test 7 Failed: No tags found for EC2 instance"
              exit 1
            else
              echo "Test 7 Passed: EC2 Instance Tags Retrieved Successfully"
              echo "$INSTANCE_TAGS"
            fi

            # Test 8: Verify Ansible Playbook Execution
            echo "Running Test 8: Verify Ansible Playbook Execution"
            ansible-playbook -i $INVENTORY_FILE playbook.yml > test_ansible_playbook.log 2>&1
            if [ $? -eq 0 ]; then
              echo "Test 8 Passed: Ansible Playbook Executed Successfully"
            else
              echo "Test 8 Failed: Ansible Playbook Execution Failed"
              cat test_ansible_playbook.log
              exit 1
            fi
